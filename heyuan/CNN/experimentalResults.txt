! git clone https://github.com/NahuelCostaCortez/RUL-VAE/

cd Remaining-Useful-Life-Estimation-Variational/

import numpy as np
import utils

# sensors to work with: T30, T50, P30, PS30, phi
sensors = ['s_3', 's_4', 's_7', 's_11', 's_12']
# windows length
sequence_length = 30
# smoothing intensity
alpha = 0.1
# max RUL
threshold = 125

dataset = 'FD001'
path = './RUL-VAE/models/FD001.h5'

x_train, y_train, x_val, y_val, x_test, y_test = utils.get_data(dataset, sensors, sequence_length, alpha, threshold)

utils.results(path, np.concatenate((x_train, x_val)), np.concatenate((y_train, y_val)), x_test, y_test.clip(upper=threshold))



dataset = 'FD003'
path = './RUL-VAE/models/FD003.h5'

x_train, y_train, x_val, y_val, x_test, y_test = utils.get_data(dataset, sensors, sequence_length, alpha, threshold)

utils.results(path, np.concatenate((x_train, x_val)), np.concatenate((y_train, y_val)), x_test, y_test.clip(upper=threshold))





dataset = 'FD002'
path = './RUL-VAE/models/FD002.h5'
sensors = ['s_3', 's_4', 's_7', 's_10', 's_11', 's_12']

x_train, y_train, x_val, y_val, x_test, y_test = utils.get_data(dataset, sensors, sequence_length, alpha, threshold)

utils.results(path, np.concatenate((x_train, x_val)), np.concatenate((y_train, y_val)), x_test, y_test.clip(upper=threshold))





dataset = 'FD004'
path = './RUL-VAE/models/FD004.h5'
sensors = ['s_3', 's_4', 's_7', 's_10', 's_11', 's_12']

x_train, y_train, x_val, y_val, x_test, y_test = utils.get_data(dataset, sensors, sequence_length, alpha, threshold)

utils.results(path, np.concatenate((x_train, x_val)), np.concatenate((y_train, y_val)), x_test, y_test.clip(upper=threshold))




